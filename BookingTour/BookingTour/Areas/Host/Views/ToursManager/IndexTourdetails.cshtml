@{
    ViewData["Title"] = "Danh sách Tour Details";
    Layout = "~/Views/Shared/_LayoutHost.cshtml";
}

<h2 class="text-center my-4">Danh sách Tour Details</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<button class="btn btn-primary mb-3" onclick="showAddModal()">Thêm Tour Detail</button>

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th>ID Tour</th>
            <th>Ngày</th>
            <th>Hành trình</th>
            <th>Địa điểm</th>
            <th>Địa chỉ</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody id="tourDetailsTable"></tbody>
</table>

<nav>
    <ul class="pagination justify-content-center" id="pagination"></ul>
</nav>

<div class="modal" id="tourModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm/Sửa Tour Detail</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="tourForm">
                    <input type="hidden" id="editID" value="">
                    <label>ID Tour:</label>
                    <input type="number" id="idTour" class="form-control" required>
                    <label>ID Địa điểm:</label>
                    <input type="number" id="idDes" class="form-control" required>
                    <label>Hành trình:</label>
                    <input type="text" id="itinerary" class="form-control" required>
                    <label>Ngày:</label>
                    <input type="date" id="date" class="form-control">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="saveTourDetail()">Lưu</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script>
    const apiBaseUrl = "https://localhost:7263/api/tourdetails";
    let currentPage = 1;
    const rowsPerPage = 5;

    document.addEventListener("DOMContentLoaded", loadTourDetails);

    async function loadTourDetails() {
        const response = await fetch(apiBaseUrl);
        const data = await response.json();
        paginateData(data);
    }

    function paginateData(data) {
        const table = document.getElementById("tourDetailsTable");
        table.innerHTML = "";
        const start = (currentPage - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        const paginatedItems = data.slice(start, end);

        paginatedItems.forEach(tour => {
            table.innerHTML += `
                    <tr>
                        <td>${tour.idTour}</td>
                        <td>${tour.date ? new Date(tour.date).toLocaleDateString('vi-VN') : 'Không có ngày'}</td>
                        <td>${tour.itinerary}</td>
                        <td>${tour.destinationName}</td>
                        <td>${tour.destinationAddress}</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editTourDetail(${tour.id})">Sửa</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteTourDetail(${tour.id})">Xóa</button>
                        </td>
                    </tr>`;
        });
        renderPagination(data.length);
    }

    function renderPagination(totalItems) {
        const totalPages = Math.ceil(totalItems / rowsPerPage);
        const pagination = document.getElementById("pagination");
        pagination.innerHTML = "";
        for (let i = 1; i <= totalPages; i++) {
            pagination.innerHTML += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                                            <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                                        </li>`;
        }
    }

    function changePage(page) {
        currentPage = page;
        loadTourDetails();
    }

    function showAddModal() {
        document.getElementById("tourForm").reset();
        document.getElementById("editID").value = "";
        $("#tourModal").modal("show");
    }

    async function saveTourDetail() {
        const id = document.getElementById("editID").value;
        const tourDetail = {
            idTour: document.getElementById("idTour").value,
            idDes: document.getElementById("idDes").value,
            itinerary: document.getElementById("itinerary").value,
            date: document.getElementById("date").value
        };

        const method = id ? "PUT" : "POST";
        const url = id ? `${apiBaseUrl}/${id}` : apiBaseUrl;

        await fetch(url, {
            method,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(tourDetail)
        });

        $("#tourModal").modal("hide");
        loadTourDetails();
    }

    async function editTourDetail(id) {
        const response = await fetch(`${apiBaseUrl}/${id}`);
        const data = await response.json();

        document.getElementById("editID").value = data.id;
        document.getElementById("idTour").value = data.idTour;
        document.getElementById("idDes").value = data.idDes;
        document.getElementById("itinerary").value = data.itinerary;
        document.getElementById("date").value = data.date ? data.date.split("T")[0] : "";

        $("#tourModal").modal("show");
    }

    async function deleteTourDetail(id) {
        if (confirm("Bạn có chắc muốn xóa?")) {
            await fetch(`${apiBaseUrl}/${id}`, { method: "DELETE" });
            loadTourDetails();
        }
    }
</script>   